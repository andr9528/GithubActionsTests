name: Automerge Main -> Staging -> Develop

on:
  push:
    branches: [ "main" ] # triggered when a push to 'main' happens.
  workflow_dispatch: # on button click

jobs:
  merge-main-to-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --local user.name "GitHub Actions # ${GITHUB_ACTOR}"
      - name: Merge 'main' to 'staging'
        id: Merge
        continue-on-error: true
        run: |
          git fetch --unshallow
          git checkout staging
          git pull
          git merge --no-ff origin/main -m "Automerge 'main' to 'staging'. Action triggered by: ${GITHUB_ACTOR}."
          git push
      - name: Abort Merge
        if: steps.Merge.outcome == 'failure'
        run: |
          echo "Merge was a ${{steps.Merge.outcome}}."
          git merge --abort
      - name: Create Pull Request on Merge failure
        if: steps.Merge.outcome == 'failure'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: main
          destination_branch: staging
          pr_title: Automerge Failed
          pr_body: Failed to merge 'main' into 'staging'.
          github_token: ${{ secrets.GITHUB_TOKEN }}

  merge-staging-to-develop:
    needs: merge-main-to-staging
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set Git config
        run: |
          git config --local user.email "${GITHUB_ACTOR}@users.noreply.github.com"
          git config --local user.name "GitHub Actions # ${GITHUB_ACTOR}"
      - name: Merge 'staging' to 'develop'
        id: Merge
        continue-on-error: true
        run: |
          git fetch --unshallow
          git checkout develop
          git pull
          git merge --no-ff origin/staging -m "Automerge 'staging' to 'develop'. Action triggered by: ${GITHUB_ACTOR}."
          git push
      - name: Abort Merge
        if: steps.Merge.outcome == 'failure'
        run: |
          echo "Merge was a ${{steps.Merge.outcome}}."
          git merge --abort
      - name: Create Pull Request on Merge failure
        if: steps.Merge.outcome == 'failure'
        uses: repo-sync/pull-request@v2
        with:
          source_branch: staging
          destination_branch: develop
          pr_title: Automerge Failed
          pr_body: Failed to merge 'staging' into 'develop'.
          github_token: ${{ secrets.GITHUB_TOKEN }}

     